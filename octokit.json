{
    request: [Function: newApi] {
      endpoint: [Function: bound endpointWithDefaults] {
        DEFAULTS: [Object],
        defaults: [Function: bound withDefaults],
        merge: [Function: bound merge],
        parse: [Function: parse]
      },
      defaults: [Function: bound withDefaults]
    },
    graphql: [Function: newApi] {
      defaults: [Function: bound withDefaults],
      endpoint: [Function: bound endpointWithDefaults] {
        DEFAULTS: [Object],
        defaults: [Function: bound withDefaults],
        merge: [Function: bound merge],
        parse: [Function: parse]
      }
    },
    log: {
      debug: [Function: debug],
      info: [Function: info],
      warn: [Function: bound warn],
      error: [Function: bound error]
    },
    hook: [Function: bound register] {
      api: {
        remove: [Function: bound removeHook],
        before: [Function: bound addHook],
        error: [Function: bound addHook],
        after: [Function: bound addHook],
        wrap: [Function: bound addHook]
      },
      remove: [Function: bound removeHook],
      before: [Function: bound addHook],
      error: [Function: bound addHook],
      after: [Function: bound addHook],
      wrap: [Function: bound addHook]
    },
    auth: [Function: bound auth] AsyncFunction {
      hook: [Function: bound hook] AsyncFunction
    },
    rest: {
      actions: {
        addSelectedRepoToOrgSecret: [Function],
        approveWorkflowRun: [Function],
        cancelWorkflowRun: [Function],
        createOrUpdateEnvironmentSecret: [Function],
        createOrUpdateOrgSecret: [Function],
        createOrUpdateRepoSecret: [Function],
        createRegistrationTokenForOrg: [Function],
        createRegistrationTokenForRepo: [Function],
        createRemoveTokenForOrg: [Function],
        createRemoveTokenForRepo: [Function],
        createWorkflowDispatch: [Function],
        deleteArtifact: [Function],
        deleteEnvironmentSecret: [Function],
        deleteOrgSecret: [Function],
        deleteRepoSecret: [Function],
        deleteSelfHostedRunnerFromOrg: [Function],
        deleteSelfHostedRunnerFromRepo: [Function],
        deleteWorkflowRun: [Function],
        deleteWorkflowRunLogs: [Function],
        disableSelectedRepositoryGithubActionsOrganization: [Function],
        disableWorkflow: [Function],
        downloadArtifact: [Function],
        downloadJobLogsForWorkflowRun: [Function],
        downloadWorkflowRunAttemptLogs: [Function],
        downloadWorkflowRunLogs: [Function],
        enableSelectedRepositoryGithubActionsOrganization: [Function],
        enableWorkflow: [Function],
        getAllowedActionsOrganization: [Function],
        getAllowedActionsRepository: [Function],
        getArtifact: [Function],
        getEnvironmentPublicKey: [Function],
        getEnvironmentSecret: [Function],
        getGithubActionsPermissionsOrganization: [Function],
        getGithubActionsPermissionsRepository: [Function],
        getJobForWorkflowRun: [Function],
        getOrgPublicKey: [Function],
        getOrgSecret: [Function],
        getPendingDeploymentsForRun: [Function],
        getRepoPermissions: [Function],
        getRepoPublicKey: [Function],
        getRepoSecret: [Function],
        getReviewsForRun: [Function],
        getSelfHostedRunnerForOrg: [Function],
        getSelfHostedRunnerForRepo: [Function],
        getWorkflow: [Function],
        getWorkflowRun: [Function],
        getWorkflowRunAttempt: [Function],
        getWorkflowRunUsage: [Function],
        getWorkflowUsage: [Function],
        listArtifactsForRepo: [Function],
        listEnvironmentSecrets: [Function],
        listJobsForWorkflowRun: [Function],
        listJobsForWorkflowRunAttempt: [Function],
        listOrgSecrets: [Function],
        listRepoSecrets: [Function],
        listRepoWorkflows: [Function],
        listRunnerApplicationsForOrg: [Function],
        listRunnerApplicationsForRepo: [Function],
        listSelectedReposForOrgSecret: [Function],
        listSelectedRepositoriesEnabledGithubActionsOrganization: [Function],
        listSelfHostedRunnersForOrg: [Function],
        listSelfHostedRunnersForRepo: [Function],
        listWorkflowRunArtifacts: [Function],
        listWorkflowRuns: [Function],
        listWorkflowRunsForRepo: [Function],
        removeSelectedRepoFromOrgSecret: [Function],
        reviewPendingDeploymentsForRun: [Function],
        setAllowedActionsOrganization: [Function],
        setAllowedActionsRepository: [Function],
        setGithubActionsPermissionsOrganization: [Function],
        setGithubActionsPermissionsRepository: [Function],
        setSelectedReposForOrgSecret: [Function],
        setSelectedRepositoriesEnabledGithubActionsOrganization: [Function]
      },
      activity: {
        checkRepoIsStarredByAuthenticatedUser: [Function],
        deleteRepoSubscription: [Function],
        deleteThreadSubscription: [Function],
        getFeeds: [Function],
        getRepoSubscription: [Function],
        getThread: [Function],
        getThreadSubscriptionForAuthenticatedUser: [Function],
        listEventsForAuthenticatedUser: [Function],
        listNotificationsForAuthenticatedUser: [Function],
        listOrgEventsForAuthenticatedUser: [Function],
        listPublicEvents: [Function],
        listPublicEventsForRepoNetwork: [Function],
        listPublicEventsForUser: [Function],
        listPublicOrgEvents: [Function],
        listReceivedEventsForUser: [Function],
        listReceivedPublicEventsForUser: [Function],
        listRepoEvents: [Function],
        listRepoNotificationsForAuthenticatedUser: [Function],
        listReposStarredByAuthenticatedUser: [Function],
        listReposStarredByUser: [Function],
        listReposWatchedByUser: [Function],
        listStargazersForRepo: [Function],
        listWatchedReposForAuthenticatedUser: [Function],
        listWatchersForRepo: [Function],
        markNotificationsAsRead: [Function],
        markRepoNotificationsAsRead: [Function],
        markThreadAsRead: [Function],
        setRepoSubscription: [Function],
        setThreadSubscription: [Function],
        starRepoForAuthenticatedUser: [Function],
        unstarRepoForAuthenticatedUser: [Function]
      },
      apps: {
        addRepoToInstallation: [Function],
        addRepoToInstallationForAuthenticatedUser: [Function],
        checkToken: [Function],
        createContentAttachment: [Function],
        createContentAttachmentForRepo: [Function],
        createFromManifest: [Function],
        createInstallationAccessToken: [Function],
        deleteAuthorization: [Function],
        deleteInstallation: [Function],
        deleteToken: [Function],
        getAuthenticated: [Function],
        getBySlug: [Function],
        getInstallation: [Function],
        getOrgInstallation: [Function],
        getRepoInstallation: [Function],
        getSubscriptionPlanForAccount: [Function],
        getSubscriptionPlanForAccountStubbed: [Function],
        getUserInstallation: [Function],
        getWebhookConfigForApp: [Function],
        getWebhookDelivery: [Function],
        listAccountsForPlan: [Function],
        listAccountsForPlanStubbed: [Function],
        listInstallationReposForAuthenticatedUser: [Function],
        listInstallations: [Function],
        listInstallationsForAuthenticatedUser: [Function],
        listPlans: [Function],
        listPlansStubbed: [Function],
        listReposAccessibleToInstallation: [Function],
        listSubscriptionsForAuthenticatedUser: [Function],
        listSubscriptionsForAuthenticatedUserStubbed: [Function],
        listWebhookDeliveries: [Function],
        redeliverWebhookDelivery: [Function],
        removeRepoFromInstallation: [Function],
        removeRepoFromInstallationForAuthenticatedUser: [Function],
        resetToken: [Function],
        revokeInstallationAccessToken: [Function],
        scopeToken: [Function],
        suspendInstallation: [Function],
        unsuspendInstallation: [Function],
        updateWebhookConfigForApp: [Function]
      },
      billing: {
        getGithubActionsBillingOrg: [Function],
        getGithubActionsBillingUser: [Function],
        getGithubPackagesBillingOrg: [Function],
        getGithubPackagesBillingUser: [Function],
        getSharedStorageBillingOrg: [Function],
        getSharedStorageBillingUser: [Function]
      },
      checks: {
        create: [Function],
        createSuite: [Function],
        get: [Function],
        getSuite: [Function],
        listAnnotations: [Function],
        listForRef: [Function],
        listForSuite: [Function],
        listSuitesForRef: [Function],
        rerequestRun: [Function],
        rerequestSuite: [Function],
        setSuitesPreferences: [Function],
        update: [Function]
      },
      codeScanning: {
        deleteAnalysis: [Function],
        getAlert: [Function],
        getAnalysis: [Function],
        getSarif: [Function],
        listAlertInstances: [Function],
        listAlertsForRepo: [Function],
        listAlertsInstances: [Function],
        listRecentAnalyses: [Function],
        updateAlert: [Function],
        uploadSarif: [Function]
      },
      codesOfConduct: { getAllCodesOfConduct: [Function], getConductCode: [Function] },
      emojis: { get: [Function] },
      enterpriseAdmin: {
        disableSelectedOrganizationGithubActionsEnterprise: [Function],
        enableSelectedOrganizationGithubActionsEnterprise: [Function],
        getAllowedActionsEnterprise: [Function],
        getGithubActionsPermissionsEnterprise: [Function],
        listSelectedOrganizationsEnabledGithubActionsEnterprise: [Function],
        setAllowedActionsEnterprise: [Function],
        setGithubActionsPermissionsEnterprise: [Function],
        setSelectedOrganizationsEnabledGithubActionsEnterprise: [Function]
      },
      gists: {
        checkIsStarred: [Function],
        create: [Function],
        createComment: [Function],
        delete: [Function],
        deleteComment: [Function],
        fork: [Function],
        get: [Function],
        getComment: [Function],
        getRevision: [Function],
        list: [Function],
        listComments: [Function],
        listCommits: [Function],
        listForUser: [Function],
        listForks: [Function],
        listPublic: [Function],
        listStarred: [Function],
        star: [Function],
        unstar: [Function],
        update: [Function],
        updateComment: [Function]
      },
      git: {
        createBlob: [Function],
        createCommit: [Function],
        createRef: [Function],
        createTag: [Function],
        createTree: [Function],
        deleteRef: [Function],
        getBlob: [Function],
        getCommit: [Function],
        getRef: [Function],
        getTag: [Function],
        getTree: [Function],
        listMatchingRefs: [Function],
        updateRef: [Function]
      },
      gitignore: { getAllTemplates: [Function], getTemplate: [Function] },
      interactions: {
        getRestrictionsForAuthenticatedUser: [Function],
        getRestrictionsForOrg: [Function],
        getRestrictionsForRepo: [Function],
        getRestrictionsForYourPublicRepos: [Function],
        removeRestrictionsForAuthenticatedUser: [Function],
        removeRestrictionsForOrg: [Function],
        removeRestrictionsForRepo: [Function],
        removeRestrictionsForYourPublicRepos: [Function],
        setRestrictionsForAuthenticatedUser: [Function],
        setRestrictionsForOrg: [Function],
        setRestrictionsForRepo: [Function],
        setRestrictionsForYourPublicRepos: [Function]
      },
      issues: {
        addAssignees: [Function],
        addLabels: [Function],
        checkUserCanBeAssigned: [Function],
        create: [Function],
        createComment: [Function],
        createLabel: [Function],
        createMilestone: [Function],
        deleteComment: [Function],
        deleteLabel: [Function],
        deleteMilestone: [Function],
        get: [Function],
        getComment: [Function],
        getEvent: [Function],
        getLabel: [Function],
        getMilestone: [Function],
        list: [Function],
        listAssignees: [Function],
        listComments: [Function],
        listCommentsForRepo: [Function],
        listEvents: [Function],
        listEventsForRepo: [Function],
        listEventsForTimeline: [Function],
        listForAuthenticatedUser: [Function],
        listForOrg: [Function],
        listForRepo: [Function],
        listLabelsForMilestone: [Function],
        listLabelsForRepo: [Function],
        listLabelsOnIssue: [Function],
        listMilestones: [Function],
        lock: [Function],
        removeAllLabels: [Function],
        removeAssignees: [Function],
        removeLabel: [Function],
        setLabels: [Function],
        unlock: [Function],
        update: [Function],
        updateComment: [Function],
        updateLabel: [Function],
        updateMilestone: [Function]
      },
      licenses: {
        get: [Function],
        getAllCommonlyUsed: [Function],
        getForRepo: [Function]
      },
      markdown: { render: [Function], renderRaw: [Function] },
      meta: {
        get: [Function],
        getOctocat: [Function],
        getZen: [Function],
        root: [Function]
      },
      migrations: {
        cancelImport: [Function],
        deleteArchiveForAuthenticatedUser: [Function],
        deleteArchiveForOrg: [Function],
        downloadArchiveForOrg: [Function],
        getArchiveForAuthenticatedUser: [Function],
        getCommitAuthors: [Function],
        getImportStatus: [Function],
        getLargeFiles: [Function],
        getStatusForAuthenticatedUser: [Function],
        getStatusForOrg: [Function],
        listForAuthenticatedUser: [Function],
        listForOrg: [Function],
        listReposForAuthenticatedUser: [Function],
        listReposForOrg: [Function],
        listReposForUser: [Function],
        mapCommitAuthor: [Function],
        setLfsPreference: [Function],
        startForAuthenticatedUser: [Function],
        startForOrg: [Function],
        startImport: [Function],
        unlockRepoForAuthenticatedUser: [Function],
        unlockRepoForOrg: [Function],
        updateImport: [Function]
      },
      orgs: {
        blockUser: [Function],
        cancelInvitation: [Function],
        checkBlockedUser: [Function],
        checkMembershipForUser: [Function],
        checkPublicMembershipForUser: [Function],
        convertMemberToOutsideCollaborator: [Function],
        createInvitation: [Function],
        createWebhook: [Function],
        deleteWebhook: [Function],
        get: [Function],
        getMembershipForAuthenticatedUser: [Function],
        getMembershipForUser: [Function],
        getWebhook: [Function],
        getWebhookConfigForOrg: [Function],
        getWebhookDelivery: [Function],
        list: [Function],
        listAppInstallations: [Function],
        listBlockedUsers: [Function],
        listFailedInvitations: [Function],
        listForAuthenticatedUser: [Function],
        listForUser: [Function],
        listInvitationTeams: [Function],
        listMembers: [Function],
        listMembershipsForAuthenticatedUser: [Function],
        listOutsideCollaborators: [Function],
        listPendingInvitations: [Function],
        listPublicMembers: [Function],
        listWebhookDeliveries: [Function],
        listWebhooks: [Function],
        pingWebhook: [Function],
        redeliverWebhookDelivery: [Function],
        removeMember: [Function],
        removeMembershipForUser: [Function],
        removeOutsideCollaborator: [Function],
        removePublicMembershipForAuthenticatedUser: [Function],
        setMembershipForUser: [Function],
        setPublicMembershipForAuthenticatedUser: [Function],
        unblockUser: [Function],
        update: [Function],
        updateMembershipForAuthenticatedUser: [Function],
        updateWebhook: [Function],
        updateWebhookConfigForOrg: [Function]
      },
      packages: {
        deletePackageForAuthenticatedUser: [Function],
        deletePackageForOrg: [Function],
        deletePackageForUser: [Function],
        deletePackageVersionForAuthenticatedUser: [Function],
        deletePackageVersionForOrg: [Function],
        deletePackageVersionForUser: [Function],
        getAllPackageVersionsForAPackageOwnedByAnOrg: [Function],
        getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [Function],
        getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [Function],
        getAllPackageVersionsForPackageOwnedByOrg: [Function],
        getAllPackageVersionsForPackageOwnedByUser: [Function],
        getPackageForAuthenticatedUser: [Function],
        getPackageForOrganization: [Function],
        getPackageForUser: [Function],
        getPackageVersionForAuthenticatedUser: [Function],
        getPackageVersionForOrganization: [Function],
        getPackageVersionForUser: [Function],
        listPackagesForAuthenticatedUser: [Function],
        listPackagesForOrganization: [Function],
        listPackagesForUser: [Function],
        restorePackageForAuthenticatedUser: [Function],
        restorePackageForOrg: [Function],
        restorePackageForUser: [Function],
        restorePackageVersionForAuthenticatedUser: [Function],
        restorePackageVersionForOrg: [Function],
        restorePackageVersionForUser: [Function]
      },
      projects: {
        addCollaborator: [Function],
        createCard: [Function],
        createColumn: [Function],
        createForAuthenticatedUser: [Function],
        createForOrg: [Function],
        createForRepo: [Function],
        delete: [Function],
        deleteCard: [Function],
        deleteColumn: [Function],
        get: [Function],
        getCard: [Function],
        getColumn: [Function],
        getPermissionForUser: [Function],
        listCards: [Function],
        listCollaborators: [Function],
        listColumns: [Function],
        listForOrg: [Function],
        listForRepo: [Function],
        listForUser: [Function],
        moveCard: [Function],
        moveColumn: [Function],
        removeCollaborator: [Function],
        update: [Function],
        updateCard: [Function],
        updateColumn: [Function]
      },
      pulls: {
        checkIfMerged: [Function],
        create: [Function],
        createReplyForReviewComment: [Function],
        createReview: [Function],
        createReviewComment: [Function],
        deletePendingReview: [Function],
        deleteReviewComment: [Function],
        dismissReview: [Function],
        get: [Function],
        getReview: [Function],
        getReviewComment: [Function],
        list: [Function],
        listCommentsForReview: [Function],
        listCommits: [Function],
        listFiles: [Function],
        listRequestedReviewers: [Function],
        listReviewComments: [Function],
        listReviewCommentsForRepo: [Function],
        listReviews: [Function],
        merge: [Function],
        removeRequestedReviewers: [Function],
        requestReviewers: [Function],
        submitReview: [Function],
        update: [Function],
        updateBranch: [Function],
        updateReview: [Function],
        updateReviewComment: [Function]
      },
      rateLimit: { get: [Function] },
      reactions: {
        createForCommitComment: [Function],
        createForIssue: [Function],
        createForIssueComment: [Function],
        createForPullRequestReviewComment: [Function],
        createForRelease: [Function],
        createForTeamDiscussionCommentInOrg: [Function],
        createForTeamDiscussionInOrg: [Function],
        deleteForCommitComment: [Function],
        deleteForIssue: [Function],
        deleteForIssueComment: [Function],
        deleteForPullRequestComment: [Function],
        deleteForTeamDiscussion: [Function],
        deleteForTeamDiscussionComment: [Function],
        listForCommitComment: [Function],
        listForIssue: [Function],
        listForIssueComment: [Function],
        listForPullRequestReviewComment: [Function],
        listForTeamDiscussionCommentInOrg: [Function],
        listForTeamDiscussionInOrg: [Function]
      },
      repos: {
        acceptInvitation: [Function],
        acceptInvitationForAuthenticatedUser: [Function],
        addAppAccessRestrictions: [Function],
        addCollaborator: [Function],
        addStatusCheckContexts: [Function],
        addTeamAccessRestrictions: [Function],
        addUserAccessRestrictions: [Function],
        checkCollaborator: [Function],
        checkVulnerabilityAlerts: [Function],
        compareCommits: [Function],
        compareCommitsWithBasehead: [Function],
        createAutolink: [Function],
        createCommitComment: [Function],
        createCommitSignatureProtection: [Function],
        createCommitStatus: [Function],
        createDeployKey: [Function],
        createDeployment: [Function],
        createDeploymentStatus: [Function],
        createDispatchEvent: [Function],
        createForAuthenticatedUser: [Function],
        createFork: [Function],
        createInOrg: [Function],
        createOrUpdateEnvironment: [Function],
        createOrUpdateFileContents: [Function],
        createPagesSite: [Function],
        createRelease: [Function],
        createUsingTemplate: [Function],
        createWebhook: [Function],
        declineInvitation: [Function],
        declineInvitationForAuthenticatedUser: [Function],
        delete: [Function],
        deleteAccessRestrictions: [Function],
        deleteAdminBranchProtection: [Function],
        deleteAnEnvironment: [Function],
        deleteAutolink: [Function],
        deleteBranchProtection: [Function],
        deleteCommitComment: [Function],
        deleteCommitSignatureProtection: [Function],
        deleteDeployKey: [Function],
        deleteDeployment: [Function],
        deleteFile: [Function],
        deleteInvitation: [Function],
        deletePagesSite: [Function],
        deletePullRequestReviewProtection: [Function],
        deleteRelease: [Function],
        deleteReleaseAsset: [Function],
        deleteWebhook: [Function],
        disableAutomatedSecurityFixes: [Function],
        disableLfsForRepo: [Function],
        disableVulnerabilityAlerts: [Function],
        downloadArchive: [Function],
        downloadTarballArchive: [Function],
        downloadZipballArchive: [Function],
        enableAutomatedSecurityFixes: [Function],
        enableLfsForRepo: [Function],
        enableVulnerabilityAlerts: [Function],
        generateReleaseNotes: [Function],
        get: [Function],
        getAccessRestrictions: [Function],
        getAdminBranchProtection: [Function],
        getAllEnvironments: [Function],
        getAllStatusCheckContexts: [Function],
        getAllTopics: [Function],
        getAppsWithAccessToProtectedBranch: [Function],
        getAutolink: [Function],
        getBranch: [Function],
        getBranchProtection: [Function],
        getClones: [Function],
        getCodeFrequencyStats: [Function],
        getCollaboratorPermissionLevel: [Function],
        getCombinedStatusForRef: [Function],
        getCommit: [Function],
        getCommitActivityStats: [Function],
        getCommitComment: [Function],
        getCommitSignatureProtection: [Function],
        getCommunityProfileMetrics: [Function],
        getContent: [Function],
        getContributorsStats: [Function],
        getDeployKey: [Function],
        getDeployment: [Function],
        getDeploymentStatus: [Function],
        getEnvironment: [Function],
        getLatestPagesBuild: [Function],
        getLatestRelease: [Function],
        getPages: [Function],
        getPagesBuild: [Function],
        getPagesHealthCheck: [Function],
        getParticipationStats: [Function],
        getPullRequestReviewProtection: [Function],
        getPunchCardStats: [Function],
        getReadme: [Function],
        getReadmeInDirectory: [Function],
        getRelease: [Function],
        getReleaseAsset: [Function],
        getReleaseByTag: [Function],
        getStatusChecksProtection: [Function],
        getTeamsWithAccessToProtectedBranch: [Function],
        getTopPaths: [Function],
        getTopReferrers: [Function],
        getUsersWithAccessToProtectedBranch: [Function],
        getViews: [Function],
        getWebhook: [Function],
        getWebhookConfigForRepo: [Function],
        getWebhookDelivery: [Function],
        listAutolinks: [Function],
        listBranches: [Function],
        listBranchesForHeadCommit: [Function],
        listCollaborators: [Function],
        listCommentsForCommit: [Function],
        listCommitCommentsForRepo: [Function],
        listCommitStatusesForRef: [Function],
        listCommits: [Function],
        listContributors: [Function],
        listDeployKeys: [Function],
        listDeploymentStatuses: [Function],
        listDeployments: [Function],
        listForAuthenticatedUser: [Function],
        listForOrg: [Function],
        listForUser: [Function],
        listForks: [Function],
        listInvitations: [Function],
        listInvitationsForAuthenticatedUser: [Function],
        listLanguages: [Function],
        listPagesBuilds: [Function],
        listPublic: [Function],
        listPullRequestsAssociatedWithCommit: [Function],
        listReleaseAssets: [Function],
        listReleases: [Function],
        listTags: [Function],
        listTeams: [Function],
        listWebhookDeliveries: [Function],
        listWebhooks: [Function],
        merge: [Function],
        mergeUpstream: [Function],
        pingWebhook: [Function],
        redeliverWebhookDelivery: [Function],
        removeAppAccessRestrictions: [Function],
        removeCollaborator: [Function],
        removeStatusCheckContexts: [Function],
        removeStatusCheckProtection: [Function],
        removeTeamAccessRestrictions: [Function],
        removeUserAccessRestrictions: [Function],
        renameBranch: [Function],
        replaceAllTopics: [Function],
        requestPagesBuild: [Function],
        setAdminBranchProtection: [Function],
        setAppAccessRestrictions: [Function],
        setStatusCheckContexts: [Function],
        setTeamAccessRestrictions: [Function],
        setUserAccessRestrictions: [Function],
        testPushWebhook: [Function],
        transfer: [Function],
        update: [Function],
        updateBranchProtection: [Function],
        updateCommitComment: [Function],
        updateInformationAboutPagesSite: [Function],
        updateInvitation: [Function],
        updatePullRequestReviewProtection: [Function],
        updateRelease: [Function],
        updateReleaseAsset: [Function],
        updateStatusCheckPotection: [Function],
        updateStatusCheckProtection: [Function],
        updateWebhook: [Function],
        updateWebhookConfigForRepo: [Function],
        uploadReleaseAsset: [Function]
      },
      search: {
        code: [Function],
        commits: [Function],
        issuesAndPullRequests: [Function],
        labels: [Function],
        repos: [Function],
        topics: [Function],
        users: [Function]
      },
      secretScanning: {
        getAlert: [Function],
        listAlertsForOrg: [Function],
        listAlertsForRepo: [Function],
        updateAlert: [Function]
      },
      teams: {
        addOrUpdateMembershipForUserInOrg: [Function],
        addOrUpdateProjectPermissionsInOrg: [Function],
        addOrUpdateRepoPermissionsInOrg: [Function],
        checkPermissionsForProjectInOrg: [Function],
        checkPermissionsForRepoInOrg: [Function],
        create: [Function],
        createDiscussionCommentInOrg: [Function],
        createDiscussionInOrg: [Function],
        deleteDiscussionCommentInOrg: [Function],
        deleteDiscussionInOrg: [Function],
        deleteInOrg: [Function],
        getByName: [Function],
        getDiscussionCommentInOrg: [Function],
        getDiscussionInOrg: [Function],
        getMembershipForUserInOrg: [Function],
        list: [Function],
        listChildInOrg: [Function],
        listDiscussionCommentsInOrg: [Function],
        listDiscussionsInOrg: [Function],
        listForAuthenticatedUser: [Function],
        listMembersInOrg: [Function],
        listPendingInvitationsInOrg: [Function],
        listProjectsInOrg: [Function],
        listReposInOrg: [Function],
        removeMembershipForUserInOrg: [Function],
        removeProjectInOrg: [Function],
        removeRepoInOrg: [Function],
        updateDiscussionCommentInOrg: [Function],
        updateDiscussionInOrg: [Function],
        updateInOrg: [Function]
      },
      users: {
        addEmailForAuthenticated: [Function],
        addEmailForAuthenticatedUser: [Function],
        block: [Function],
        checkBlocked: [Function],
        checkFollowingForUser: [Function],
        checkPersonIsFollowedByAuthenticated: [Function],
        createGpgKeyForAuthenticated: [Function],
        createGpgKeyForAuthenticatedUser: [Function],
        createPublicSshKeyForAuthenticated: [Function],
        createPublicSshKeyForAuthenticatedUser: [Function],
        deleteEmailForAuthenticated: [Function],
        deleteEmailForAuthenticatedUser: [Function],
        deleteGpgKeyForAuthenticated: [Function],
        deleteGpgKeyForAuthenticatedUser: [Function],
        deletePublicSshKeyForAuthenticated: [Function],
        deletePublicSshKeyForAuthenticatedUser: [Function],
        follow: [Function],
        getAuthenticated: [Function],
        getByUsername: [Function],
        getContextForUser: [Function],
        getGpgKeyForAuthenticated: [Function],
        getGpgKeyForAuthenticatedUser: [Function],
        getPublicSshKeyForAuthenticated: [Function],
        getPublicSshKeyForAuthenticatedUser: [Function],
        list: [Function],
        listBlockedByAuthenticated: [Function],
        listBlockedByAuthenticatedUser: [Function],
        listEmailsForAuthenticated: [Function],
        listEmailsForAuthenticatedUser: [Function],
        listFollowedByAuthenticated: [Function],
        listFollowedByAuthenticatedUser: [Function],
        listFollowersForAuthenticatedUser: [Function],
        listFollowersForUser: [Function],
        listFollowingForUser: [Function],
        listGpgKeysForAuthenticated: [Function],
        listGpgKeysForAuthenticatedUser: [Function],
        listGpgKeysForUser: [Function],
        listPublicEmailsForAuthenticated: [Function],
        listPublicEmailsForAuthenticatedUser: [Function],
        listPublicKeysForUser: [Function],
        listPublicSshKeysForAuthenticated: [Function],
        listPublicSshKeysForAuthenticatedUser: [Function],
        setPrimaryEmailVisibilityForAuthenticated: [Function],
        setPrimaryEmailVisibilityForAuthenticatedUser: [Function],
        unblock: [Function],
        unfollow: [Function],
        updateAuthenticated: [Function]
      }
    },
    paginate: [Function: bound paginate] { iterator: [Function: bound iterator] }
  }